Параметры для входных данных передаются с префиксом input
`--input.path`, `--input.format` и т.д
Для выходных данных аналогично, с префиксом output

```
$ spark2-submit --master local étoilé-0.1.6-SNAPSHOT.jar \
    --input.path=hdfs://tmp/avro                            \
    --output.path=file:///tmp/csv10                         \
    --output.delimiter=","                                  \
    --output.header=true                                    \
```

Можно передать выражение или имя колонки (колонок) для сортивки входного датасета,
через параметр input.sort

```
$ spark2-submit --master local[1] étoilé-0.1.6-SNAPSHOT.jar   \
    --input.path=hdfs://tmp/avro                                 \
    --input.sort='cast(CTL_VALIDFROM as timestamp)'              \
    (or --input.sort='column,column' )
    --output.path=file:///tmp/csv20                              \
    --output.delimiter="|"                                       \
    --output.header=true                                         \
```

Можно конвертировать в csv таблицы из oracle

```
$ spark2-submit --jars étoilé-0.1.6-SNAPSHOT.jar --master local étoilé-0.1.6-SNAPSHOT.jar   \
    --input.url="jdbc://"                                                                                                                         \
    --input.format="jdbc"                                                                                                                         \
    --input.dbtable=schema_name.table_name                                                                                                        \
    --input.path=hdfs://tmp/avro                                                                                                                  \
    --input.user=org.sdf_test                                                                                                                       \
    --input.password=org.sdf_test                                                                                                                   \
    --output.path=file:///tmp/csv20                                                                                                               \
```

Через параметр input.cast или output.cast можно менять тип колонок в таблице

```
$ spark2-submit --jars étoilé-0.1.6-SNAPSHOT.jar --master local étoilé-0.1.6-SNAPSHOT.jar
    --input.url="jdbc://"                                                                                                                         \                                                                                                                      \
    --input.dbtable=schema_name.table_name                                                                                                        \
    --input.path=hdfs://tmp/avro                                                                                                                  \
    --input.cast="column:type,column:type"                                                                                                        \
    (or --output.cast="column:type,column:type")
    --output.path=file:///tmp/csv20                                                                                                               \
```

Можно через параметр input.convert менять тип колонок для всей таблицы, без указания конкретной колонки

```
$ spark2-submit --jars étoilé-0.1.6-SNAPSHOT.jar --master local étoilé-0.1.6-SNAPSHOT.jar
    --input.url="jdbc://"                                                                                                                         \                                                                                                                      \
    --input.dbtable=schema_name.table_name                                                                                                        \
    --input.path=hdfs://tmp/avro                                                                                                                  \
    --input.cast="column:type,column:type"                                                                                                        \
    (or --output.cast="column:type,column:type")
    --input.convert=type:type,type:type                                                                                                           \
    (or --output.convert="type:type,type:type")
    --output.path=file:///tmp/csv20                                                                                                               \
```
Можно через параметр output.drop удалять ненужную колонку или колонки

```
$ spark2-submit --jars étoilé-0.1.6-SNAPSHOT.jar --master local étoilé-0.1.6-SNAPSHOT.jar
    --input.url="jdbc://"                                                                                                                         \                                                                                                                      \
    --input.dbtable=schema_name.table_name                                                                                                        \
    --input.path=hdfs://tmp/avro                                                                                                                  \
    --output.drop="column"                                                                                                                        \
    (or --output.drop="column,column")
    --output.path=file:///tmp/csv20                                                                                                               \
```
Можно через параметр input.replace менять значение типов данных

```
$ spark2-submit --jars étoilé-0.1.6-SNAPSHOT.jar --master local étoilé-0.1.6-SNAPSHOT.jar
    --input.url="jdbc://"                                                                                                                         \                                                                                                                      \
    --input.dbtable=schema_name.table_name                                                                                                        \
    --input.replace=string:"$(printf '\type')"/value                                                                                                                 \
    --output.path=file:///tmp/csv20


